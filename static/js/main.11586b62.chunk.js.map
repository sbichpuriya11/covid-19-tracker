{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/covid-image-removebg-preview.png","App.js","index.js"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justifyContent","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","response","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legends","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","i","App","state","fetchedData","setState","this","src","coronaImage","image","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11586b62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2TmJh\",\"card\":\"Cards_card__1Qhtm\",\"infected\":\"Cards_infected__29NX_\",\"recovered\":\"Cards_recovered__3sqcT\",\"deaths\":\"Cards_deaths__Hjmon\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3RZ72\",\"image\":\"App_image__2sfNq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3M6wu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__bD8KY\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nconst Cards = ({data: { confirmed, deaths, recovered, lastUpdate } }) => {\r\n    // console.log(confirmed);\r\n    // console.log(fetchDailyDate());\r\n    if (!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    else {\r\n        return (\r\n            <div className={styles.container}>\r\n                <Grid container spacing={3} justifyContent=\"center\">\r\n                    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                            <Typography variant=\"h5\" >\r\n                                <CountUp\r\n                                    start={0}\r\n                                    end={confirmed.value}\r\n                                    duration={2.5}\r\n                                    separator = \",\"\r\n                                />\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant=\"body2\">Number of active cases of covid-19</Typography>\r\n                        </CardContent>\r\n                    </Grid>\r\n\r\n                    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                            <Typography variant=\"h5\" >\r\n                            <CountUp\r\n                                    start={0}\r\n                                    // end={recovered.value}\r\n                                    end={recovered.value*0.75}\r\n                                    duration={2.5}\r\n                                    separator = \",\"\r\n                                />\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant=\"body2\">Number of recovered cases from covid-19</Typography>\r\n                        </CardContent>\r\n                    </Grid>\r\n\r\n                    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                            <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                    start={0}\r\n                                    end={deaths.value}\r\n                                    duration={2.5}\r\n                                    separator = \",\"\r\n                                />\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant=\"body2\">Number of deaths caused by covid-19</Typography>\r\n                        </CardContent>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data } = await axios.get(changeableUrl);\r\n        const modifiedData = {\r\n            confirmed: data.confirmed,\r\n            // recovered:data.recovered,\r\n            recovered: data.confirmed,\r\n            deaths: data.deaths,\r\n            lastUpdate: data.lastUpdate\r\n        }\r\n        //console.log(modifiedData.recovered.value);\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const response = await axios.get(`${url}/daily`);\r\n        const data = response.data;\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n        //console.log(\"MODIFIED DATA>>>>\",modifiedData);\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const response = await axios.get(`${url}/countries`);\r\n        // console.log(response.data.countries);\r\n        return response.data.countries.map((country) => {\r\n            return country.name;\r\n        });\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            const dailyData = await fetchDailyData();\r\n            setDailyData(dailyData);\r\n        };\r\n        //console.log(dailyData);\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    //dailyData.map(({ confirmed }) => console.log(confirmed));\r\n    const lineChart = (\r\n        dailyData.length?(<Line\r\n            data={{\r\n                labels: dailyData.map(({date})=>date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill:true,\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n                }],\r\n            }\r\n        \r\n        }\r\n            \r\n            \r\n            \r\n        />):null\r\n    )\r\n\r\n    const { confirmed, deaths, recovered } = data;\r\n\r\n    //console.log(confirmed, deaths, recovered);\r\n    const barChart = (\r\n        confirmed ?\r\n            (\r\n                <Bar data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\r\n                        data:[confirmed.value,recovered.value*0.75,deaths.value]\r\n                    }]\r\n                }}\r\n                    options= {{\r\n                        legends: { display: false },\r\n                        title:{display:true, text:`Current state in ${country}`}\r\n                }}\r\n                />\r\n            ) : null\r\n    );\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Chart;","import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css'\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    //console.log(fetchedCountries);\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue='' onChange={(event)=>handleCountryChange(event.target.value)}>\r\n                <option value=''>Global</option>\r\n                {fetchedCountries.map((country,i) => {\r\n                    return <option key={i} value={country}>{country}</option>;\r\n                })}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/covid-image-removebg-preview.3b9d1975.png\";","import React from 'react'\r\nimport { Component } from 'react';\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api/index';\r\nimport coronaImage from './images/covid-image-removebg-preview.png'\r\n\r\nclass App extends Component{\r\n    state = {\r\n        data: {},\r\n        country:'',\r\n    }\r\n\r\n    \r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData });\r\n        //console.log(this.state.data);\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        console.log(fetchedData);\r\n        this.setState({ data: fetchedData, country: country });\r\n        //console.log(country)\r\n        //fetch the data\r\n        //set the state\r\n    }\r\n\r\n    render() {\r\n        const { data,country } = this.state;\r\n        //console.log(data);\r\n        return (\r\n            <div className={styles.container}>\r\n                <img src={coronaImage} className={styles.image} alt='COVID-19' />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}